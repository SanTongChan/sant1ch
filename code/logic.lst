C51 COMPILER V9.52.0.0   LOGIC                                                             09/01/2017 01:37:04 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LOGIC
OBJECT MODULE PLACED IN logic.obj
COMPILER INVOKED BY: F:\Program Files (x86)\Keil\C51\BIN\C51.EXE code\logic\logic.c BROWSE INCDIR(.\code\common;.\code\d
                    -river;.\code\flash;.\code\key;.\code\led;.\code\logic;.\code\remote;.\code\sant1ch;.\code\timer) DEBUG OBJECTEXTEND PRIN
                    -T(.\logic.lst) OBJECT(logic.obj)

line level    source

   1          #include <intrins.h>
   2          #include "logic.h"
   3          #include "N76E003.h"
   4          #include "key.h"
   5          #include "led.h"
   6          #include "timer.h"
   7          #include "key_driver.h"
   8          #include "flash.h"
   9          #include "remote.h"
  10          
  11          DevDef xdata dev_def = {0};
  12          bool deal_remote_flag = false;
  13          bool key_scan_flag = false;
  14          bool update_local_flag = false;
  15          bool syn_app_flag = false;
  16          bool led_flag = false;
  17          bool save_mode_flag = false;
  18          
  19          #define  JOGGING_TIME   (7)
  20          
  21          void incJoggingTime(void)
  22          {
  23   1              if(dev_def.jogging_time == 7)//如果为700ms，增加为10s
  24   1              {
  25   2                      dev_def.jogging_time = 100;
  26   2              }
  27   1              else if(dev_def.jogging_time == 600)//如果为60s，已经为最高，直接返回
  28   1              {
  29   2                      return;
  30   2              }
  31   1              else//按一次，增加10S
  32   1              {
  33   2                      dev_def.jogging_time += 100;
  34   2              }
  35   1              RfLedOnXt(10,10,1);//按一次，灯闪一次
  36   1      }
  37          void decJoggingTime(void)
  38          {
  39   1              if(dev_def.jogging_time == 7)//最低直接返回
  40   1              {
  41   2                      return;
  42   2              }
  43   1              else if(dev_def.jogging_time == 100)//如果为10s，减少为700ms
  44   1              {
  45   2                      dev_def.jogging_time = 7;
  46   2              }
  47   1              else//其他每次减少10S
  48   1              {
  49   2                      dev_def.jogging_time -= 100;
  50   2              }
  51   1              RfLedOnXt(10,10,1);//灯闪一次
  52   1      }
  53          void saveModeToFlash(void)
C51 COMPILER V9.52.0.0   LOGIC                                                             09/01/2017 01:37:04 PAGE 2   

  54          {
  55   1          if(save_mode_flag)
  56   1          {
  57   2                      flash_data[0] = (uint8_t)dev_def.last_dev_mode;
  58   2                      flash_data[1] = (uint8_t)(dev_def.remote_val >> 16);
  59   2                      flash_data[2] = (uint8_t)(dev_def.remote_val >> 8);
  60   2                      flash_data[3] = (uint8_t)dev_def.remote_val;
  61   2                      flash_data[4] = (uint8_t)(dev_def.jogging_time >> 8);
  62   2                      flash_data[5] = (uint8_t)(dev_def.jogging_time);
  63   2                      flashWrite();
  64   2                      save_mode_flag = false;
  65   2          }
  66   1      }
  67          static void modeInit(void)
  68          {
  69   1              flashRead();
  70   1              dev_def.dev_mode = flash_data[0];
  71   1              dev_def.last_dev_mode = flash_data[0];
  72   1              dev_def.remote_val = 
  73   1                              (uint32_t)flash_data[1] << 16
  74   1                      | (uint32_t)flash_data[2] << 8 
  75   1                      | flash_data[3];
  76   1              dev_def.jogging_time = 
  77   1                              (uint16_t)flash_data[4] << 8
  78   1                      | flash_data[5];
  79   1              if(0xff == dev_def.dev_mode
  80   1                      || 0xffffff == dev_def.remote_val
  81   1                      || 0xffff == dev_def.jogging_time)
  82   1              {
  83   2                      dev_def.dev_mode = DEV_SELFLOCK;
  84   2                      dev_def.last_dev_mode = DEV_SELFLOCK;
  85   2                      dev_def.jogging_time = 7;
  86   2                      dev_def.remote_val = 0;
  87   2              }
  88   1              if(dev_def.dev_mode == DEV_SELFLOCK)
  89   1              {
  90   2                      RfLedOff();
  91   2              }
  92   1              else if(dev_def.dev_mode == DEV_JOGGING)
  93   1              {
  94   2                      RfLedOn();
  95   2              }
  96   1      }
  97          static void relayInit(void)
  98          {
  99   1              P0M1 |= 0X80;
 100   1              P0M2 &= 0x7f;
 101   1      }
 102          static void syncApp(void)
 103          {
 104   1              static bool flag = false;
 105   1              if(dev_def.dev_mode == DEV_JOGGING)
 106   1              {
 107   2                      dev_def.timer_cnt++;
 108   2                      if(RELAY1 == 1)
 109   2                      {
 110   3                              if(false == flag)
 111   3                              {
 112   4                                      flag = true;
 113   4                                      dev_def.timer_cnt = 0;
 114   4                              }
 115   3                              if(dev_def.timer_cnt >= dev_def.jogging_time)
C51 COMPILER V9.52.0.0   LOGIC                                                             09/01/2017 01:37:04 PAGE 3   

 116   3                              {
 117   4                                      dev_def.timer_cnt = 0;
 118   4                                      flag = false;
 119   4                                      CON_RELAY = 0;
 120   4                                      dev_def.update_flag = true;
 121   4                              }
 122   3                      }
 123   2                      else
 124   2                      {
 125   3                              flag = false;
 126   3                      }
 127   2              }
 128   1              if(!dev_def.update_flag)
 129   1              {
 130   2                      CON_RELAY = RELAY1;
 131   2              }
 132   1      }
 133          static void updateLocal(void)
 134          {
 135   1              static bool high_flag = false;
 136   1              if(dev_def.update_flag)
 137   1              {
 138   2                      if(RELAY1 != CON_RELAY && high_flag == false)
 139   2                      {
 140   3                              high_flag = true;
 141   3                              KEY = 0;
 142   3                      }
 143   2                      else if(high_flag == true)
 144   2                      {
 145   3                              high_flag = false;
 146   3                              KEY = 1;
 147   3                      }
 148   2                      else
 149   2                      {
 150   3                              dev_def.update_flag = false;
 151   3                      }
 152   2              }
 153   1      }
 154          void dealLogic(void)
 155          {
 156   1              if(key_scan_flag)
 157   1          {
 158   2              key_scan_flag = false;
 159   2              keyScan();
 160   2          }
 161   1              if(syn_app_flag)
 162   1              {
 163   2                      syn_app_flag = false;
 164   2                      syncApp();
 165   2              }
 166   1              if(update_local_flag)
 167   1          {
 168   2              update_local_flag = false;
 169   2              updateLocal();//要在同步APP之后
 170   2          }
 171   1              if(led_flag)
 172   1              {
 173   2                      led_flag = false;
 174   2                      ledScan();
 175   2              }
 176   1      }
 177          void dealRemoteStudy(void)
C51 COMPILER V9.52.0.0   LOGIC                                                             09/01/2017 01:37:04 PAGE 4   

 178          {
 179   1          if(dev_def.dev_mode == DEV_REMOTE)//在remote学习模式下
 180   1          {
 181   2              if(ir_data.cnt == 10)//已经连续接收到了相同的码值10次
 182   2              {
 183   3                              if(dev_def.last_dev_mode == DEV_SELFLOCK)//如果是自锁
 184   3                              {
 185   4                                      RfLedOffXt(30,30,4);//表示学习成功，灯300ms闪烁4次,最后灭
 186   4                              }
 187   3                              else if(dev_def.last_dev_mode == DEV_JOGGING)//如果是点动
 188   3                              {
 189   4                                      RfLedOnXt(30,30,4);//表示学习成功，灯300ms闪烁4次,最后亮
 190   4                              }
 191   3              }
 192   2              if(ir_data.cnt >= 10 && ir_data.timer_cnt >= 150)//松手超过300ms
 193   2              {
 194   3                  dev_def.remote_val = ir_data.ir_data;//保存学习到的键值
 195   3                  clearIrData();//清空遥控数据
 196   3                  dev_def.dev_mode = dev_def.last_dev_mode;//退出remote模式，回到原来模式（jogging或selflock）
 197   3                              save_mode_flag = true;//置位保存按钮
 198   3              }
 199   2          }
 200   1      }
 201          void dealRemoteNormal(void)
 202          {
 203   1          static uint16_t cnt = 0;
 204   1          cnt++;
 205   1          if(dev_def.dev_mode != DEV_REMOTE && dev_def.dev_mode != DEV_TIME)//判断是在自锁或点动模式下
 206   1          {
 207   2                      if(ir_data.ir_data == dev_def.remote_val && ir_data.cnt > 0)//接收到的键值相等且计数大于0
 208   2                      {
 209   3                              if(dev_def.dev_mode == DEV_SELFLOCK)//如果是自锁
 210   3                              {
 211   4                                      RfLedOffXt(5,5,1);//50ms闪烁1次，最终灭
 212   4                              }
 213   3                              else if(dev_def.dev_mode == DEV_JOGGING)//如果是点动
 214   3                              {
 215   4                                      RfLedOnXt(5,5,1);//50ms闪烁1次，最终亮
 216   4                              }
 217   3                      }
 218   2              if(ir_data.cnt == 1)//如果已经接收到了一个有效遥控值
 219   2              {
 220   3      
 221   3                              if(ir_data.ir_data == dev_def.remote_val)//判断是否跟已经学习的相等
 222   3                              {
 223   4                                      KEY = 0;//拉低按键
 224   4                                      cnt = 0;//清空计数器
 225   4                              }
 226   3              }
 227   2              if(ir_data.timer_cnt >= 150 && ir_data.cnt >= 1
 228   2                                      && ir_data.ir_data == dev_def.remote_val)//如果已经松手300ms，且是相等的
 229   2              {
 230   3                              KEY = 1;   //拉高按键
 231   3                  if(cnt <= 2500)//5s内，证明非配置
 232   3                  {      
 233   4                                      CON_RELAY = !RELAY1;//控制继电器
 234   4                                      dev_def.update_flag = true;//置位允许更新标志
 235   4                  }
 236   3                  clearIrData();//清空遥控器的参数
 237   3              }
 238   2          }
 239   1      }
C51 COMPILER V9.52.0.0   LOGIC                                                             09/01/2017 01:37:04 PAGE 5   

 240          void dealRemote(void)
 241          {
 242   1              if(deal_remote_flag)
 243   1              {
 244   2                      deal_remote_flag = false;
 245   2                      analyzeRfData();
 246   2                      dealRemoteStudy();
 247   2                      dealRemoteNormal();
 248   2              }
 249   1      }
 250          void logicInit(void)
 251          {
 252   1              ledInit();
 253   1              keyInit();
 254   1              relayInit();
 255   1              modeInit();
 256   1              captureInit();
 257   1              timer1Init();
 258   1          timer0Init();
 259   1      }
 260          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1004    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     11    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
